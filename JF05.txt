Aqui está o código para o programa ColorRange.java que atende aos requisitos especificados:

import java.util.Scanner;

public class ColorRange {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a color code: ");
        double wavelength = scanner.nextDouble();

        if (wavelength >= 380 && wavelength < 450) {
            System.out.println("The color is Violet");
        } else if (wavelength >= 450 && wavelength < 495) {
            System.out.println("The color is Blue");
        } else if (wavelength >= 495 && wavelength < 570) {
            System.out.println("The color is Green");
        } else if (wavelength >= 570 && wavelength < 590) {
            System.out.println("The color is Yellow");
        } else if (wavelength >= 590 && wavelength < 620) {
            System.out.println("The color is Orange");
        } else if (wavelength >= 620 && wavelength <= 750) {
            System.out.println("The color is Red");
        } else {
            System.out.println("The entered wavelength is not a part of the visible spectrum");
        }
    }
}

Este programa solicita ao usuário um código de cor (comprimento de onda) como entrada e, em seguida, determina a cor correspondente com base no intervalo de comprimento de onda fornecido. Ele usa instruções if e else if para verificar qual intervalo contém o comprimento de onda fornecido e imprime a cor correspondente na saída.

Certifique-se de salvar o arquivo como ColorRange.java e compilá-lo antes de executá-lo.


Aqui está o código Java para o programa TrafficLightChecker que implementa a lógica solicitada:

import java.util.Scanner;

public class TrafficLightChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a color code:");
        int currentColor = scanner.nextInt();

        String nextColor;

        if (currentColor == 1) {
            nextColor = "green";
        } else if (currentColor == 2) {
            nextColor = "yellow";
        } else if (currentColor == 3) {
            nextColor = "red";
        } else {
            nextColor = "Invalid color";
        }

        System.out.println("Next Traffic Light is " + nextColor);
    }
}

O programa começa solicitando ao usuário que digite o código de cor atual. Em seguida, a próxima cor é determinada com base no código fornecido usando a estrutura if-else if. Se o código de cor for 1, a próxima cor será "green" (verde); se for 2, a próxima cor será "yellow" (amarelo); se for 3, a próxima cor será "red" (vermelho). Qualquer outro valor será tratado como um código de cor inválido.

O resultado é impresso na saída padrão, mostrando a próxima cor do sinal de trânsito com base no código de cor fornecido pelo usuário.

Aqui está uma possível solução para o problema 5-3, onde você determina a próxima cor de um sinal de trânsito usando a instrução switch em Java:

import java.util.Scanner;

public class TrafficLightSwitch {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite a cor atual do sinal de trânsito (vermelho, amarelo ou verde): ");
        String currentColor = scanner.nextLine().toLowerCase();

        String nextColor;
        switch (currentColor) {
            case "vermelho":
                nextColor = "verde";
                break;
            case "amarelo":
                nextColor = "vermelho";
                break;
            case "verde":
                nextColor = "amarelo";
                break;
            default:
                System.out.println("Cor inválida! Por favor, digite uma cor válida.");
                return; // Encerra o programa se a cor for inválida
        }

        System.out.println("A próxima cor do sinal de trânsito é: " + nextColor);
    }
}



2 / 2

Claro! Aqui está uma possível solução para o problema 5-3, onde você determina a próxima cor de um sinal de trânsito usando a instrução switch em Java:

java
Copy code
import java.util.Scanner;

public class TrafficLightSwitch {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite a cor atual do sinal de trânsito (vermelho, amarelo ou verde): ");
        String currentColor = scanner.nextLine().toLowerCase();

        String nextColor;
        switch (currentColor) {
            case "vermelho":
                nextColor = "verde";
                break;
            case "amarelo":
                nextColor = "vermelho";
                break;
            case "verde":
                nextColor = "amarelo";
                break;
            default:
                System.out.println("Cor inválida! Por favor, digite uma cor válida.");
                return; // Encerra o programa se a cor for inválida
        }

        System.out.println("A próxima cor do sinal de trânsito é: " + nextColor);
    }
}
Nesta solução, utilizamos a instrução switch para avaliar a cor atual do sinal de trânsito. Com base na cor atual, definimos a próxima cor atribuindo o valor correspondente à variável nextColor. Se a cor digitada pelo usuário não for uma das opções válidas (vermelho, amarelo ou verde), exibimos uma mensagem de erro.

Certifique-se de salvar o código em um arquivo chamado TrafficLightSwitch.java e executá-lo em um ambiente Java para testá-lo.